// Code generated by protoc-gen-gogo.
// source: dbprotos.proto
// DO NOT EDIT!

/*
Package dbprotos is a generated protocol buffer package.

It is generated from these files:
	dbprotos.proto

It has these top-level messages:
	EntityMessageOpt
	DatastoreEntityOpt
	DatastoreFieldOpt
	IndexFieldOpt
	CompositeIndexOpt
*/
package dbprotos

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

type EntityMessageOpt struct {
	Datastore        *DatastoreEntityOpt `protobuf:"bytes,1,opt,name=datastore" json:"datastore,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *EntityMessageOpt) Reset()                    { *m = EntityMessageOpt{} }
func (m *EntityMessageOpt) String() string            { return proto.CompactTextString(m) }
func (*EntityMessageOpt) ProtoMessage()               {}
func (*EntityMessageOpt) Descriptor() ([]byte, []int) { return fileDescriptorDbprotos, []int{0} }

func (m *EntityMessageOpt) GetDatastore() *DatastoreEntityOpt {
	if m != nil {
		return m.Datastore
	}
	return nil
}

type DatastoreEntityOpt struct {
	// Name of the Datastore Kind for this entity.
	Kind *string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// Strict reading defines whether the deserialization of Enities will fail if unknown fields are detected.
	StrictReading    *bool  `protobuf:"varint,2,opt,name=strict_reading,json=strictReading" json:"strict_reading,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DatastoreEntityOpt) Reset()                    { *m = DatastoreEntityOpt{} }
func (m *DatastoreEntityOpt) String() string            { return proto.CompactTextString(m) }
func (*DatastoreEntityOpt) ProtoMessage()               {}
func (*DatastoreEntityOpt) Descriptor() ([]byte, []int) { return fileDescriptorDbprotos, []int{1} }

func (m *DatastoreEntityOpt) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *DatastoreEntityOpt) GetStrictReading() bool {
	if m != nil && m.StrictReading != nil {
		return *m.StrictReading
	}
	return false
}

type DatastoreFieldOpt struct {
	// The name that we promise not to change for this field, even if the Protobuf field changes.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// If true, the field will not be written to Datastore, but it can be read from.
	// This can be used for backwards compatibility.
	NotWriteable     *bool  `protobuf:"varint,2,opt,name=not_writeable,json=notWriteable" json:"not_writeable,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DatastoreFieldOpt) Reset()                    { *m = DatastoreFieldOpt{} }
func (m *DatastoreFieldOpt) String() string            { return proto.CompactTextString(m) }
func (*DatastoreFieldOpt) ProtoMessage()               {}
func (*DatastoreFieldOpt) Descriptor() ([]byte, []int) { return fileDescriptorDbprotos, []int{2} }

func (m *DatastoreFieldOpt) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DatastoreFieldOpt) GetNotWriteable() bool {
	if m != nil && m.NotWriteable != nil {
		return *m.NotWriteable
	}
	return false
}

type IndexFieldOpt struct {
	// If true, the field will have a single-key index.
	Single *bool `protobuf:"varint,1,opt,name=single" json:"single,omitempty"`
	// Composite indexes of the field, may be many.
	Composite        []*CompositeIndexOpt `protobuf:"bytes,2,rep,name=composite" json:"composite,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *IndexFieldOpt) Reset()                    { *m = IndexFieldOpt{} }
func (m *IndexFieldOpt) String() string            { return proto.CompactTextString(m) }
func (*IndexFieldOpt) ProtoMessage()               {}
func (*IndexFieldOpt) Descriptor() ([]byte, []int) { return fileDescriptorDbprotos, []int{3} }

func (m *IndexFieldOpt) GetSingle() bool {
	if m != nil && m.Single != nil {
		return *m.Single
	}
	return false
}

func (m *IndexFieldOpt) GetComposite() []*CompositeIndexOpt {
	if m != nil {
		return m.Composite
	}
	return nil
}

type CompositeIndexOpt struct {
	// Id is the identifier of the composite index: other fields with the same id will make up the same composite index.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Whether the order is descending (true) or ascending (false).
	Descending       *bool  `protobuf:"varint,2,opt,name=descending" json:"descending,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CompositeIndexOpt) Reset()                    { *m = CompositeIndexOpt{} }
func (m *CompositeIndexOpt) String() string            { return proto.CompactTextString(m) }
func (*CompositeIndexOpt) ProtoMessage()               {}
func (*CompositeIndexOpt) Descriptor() ([]byte, []int) { return fileDescriptorDbprotos, []int{4} }

func (m *CompositeIndexOpt) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *CompositeIndexOpt) GetDescending() bool {
	if m != nil && m.Descending != nil {
		return *m.Descending
	}
	return false
}

var E_Entity = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*EntityMessageOpt)(nil),
	Field:         1337001,
	Name:          "dbp.entity",
	Tag:           "bytes,1337001,opt,name=entity",
}

var E_Index = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*IndexFieldOpt)(nil),
	Field:         1337102,
	Name:          "dbp.index",
	Tag:           "bytes,1337102,opt,name=index",
}

var E_Datastore = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*DatastoreFieldOpt)(nil),
	Field:         1337110,
	Name:          "dbp.datastore",
	Tag:           "bytes,1337110,opt,name=datastore",
}

func init() {
	proto.RegisterType((*EntityMessageOpt)(nil), "dbp.EntityMessageOpt")
	proto.RegisterType((*DatastoreEntityOpt)(nil), "dbp.DatastoreEntityOpt")
	proto.RegisterType((*DatastoreFieldOpt)(nil), "dbp.DatastoreFieldOpt")
	proto.RegisterType((*IndexFieldOpt)(nil), "dbp.IndexFieldOpt")
	proto.RegisterType((*CompositeIndexOpt)(nil), "dbp.CompositeIndexOpt")
	proto.RegisterExtension(E_Entity)
	proto.RegisterExtension(E_Index)
	proto.RegisterExtension(E_Datastore)
}

var fileDescriptorDbprotos = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x86, 0x69, 0x7b, 0x6f, 0x69, 0x4f, 0x6f, 0xcb, 0xed, 0x80, 0xb5, 0x08, 0x6a, 0x89, 0x08,
	0x5d, 0xa5, 0x50, 0x74, 0xd3, 0xa5, 0x55, 0xa1, 0xa0, 0x54, 0x03, 0x22, 0x08, 0x52, 0x92, 0xce,
	0x18, 0x06, 0xd3, 0x99, 0x30, 0x73, 0x44, 0x7d, 0x09, 0x97, 0xbe, 0x83, 0x0f, 0xa3, 0xcf, 0x24,
	0x99, 0xc9, 0xa4, 0xad, 0x5d, 0xb8, 0xca, 0xe4, 0xcf, 0x9f, 0x8f, 0xf9, 0xcf, 0x7f, 0xa0, 0x45,
	0xa3, 0x54, 0x49, 0x94, 0xda, 0x37, 0x0f, 0x52, 0xa1, 0x51, 0xba, 0xd3, 0x8b, 0xa5, 0x8c, 0x13,
	0x36, 0x30, 0x52, 0xf4, 0xf4, 0x30, 0xa0, 0x4c, 0xcf, 0x15, 0x4f, 0x51, 0x2a, 0x6b, 0xf3, 0x26,
	0xf0, 0xff, 0x4c, 0x20, 0xc7, 0xd7, 0x4b, 0xa6, 0x75, 0x18, 0xb3, 0x69, 0x8a, 0xe4, 0x18, 0xea,
	0x34, 0xc4, 0x50, 0xa3, 0x54, 0xac, 0x5b, 0xea, 0x95, 0xfa, 0x8d, 0xe1, 0xb6, 0x4f, 0xa3, 0xd4,
	0x3f, 0x75, 0xaa, 0xfd, 0x65, 0x9a, 0x62, 0xb0, 0x74, 0x7a, 0x53, 0x20, 0x9b, 0x06, 0x42, 0xe0,
	0xcf, 0x23, 0x17, 0xd4, 0x70, 0xea, 0x81, 0x39, 0x93, 0x43, 0x68, 0x69, 0x54, 0x7c, 0x8e, 0x33,
	0xc5, 0x42, 0xca, 0x45, 0xdc, 0x2d, 0xf7, 0x4a, 0xfd, 0x5a, 0xd0, 0xb4, 0x6a, 0x60, 0x45, 0xef,
	0x02, 0xda, 0x05, 0xf0, 0x9c, 0xb3, 0x84, 0xe6, 0x3c, 0x11, 0x2e, 0x98, 0xe3, 0x65, 0x67, 0x72,
	0x00, 0x4d, 0x21, 0x71, 0xf6, 0xac, 0x38, 0xb2, 0x30, 0x4a, 0x58, 0x8e, 0xfb, 0x27, 0x24, 0xde,
	0x3a, 0xcd, 0xbb, 0x87, 0xe6, 0x44, 0x50, 0xf6, 0x52, 0x90, 0x3a, 0x50, 0xd5, 0x5c, 0xc4, 0x89,
	0x65, 0xd5, 0x82, 0xfc, 0x8d, 0x1c, 0x41, 0x7d, 0x2e, 0x17, 0xa9, 0xd4, 0x1c, 0x33, 0x52, 0xa5,
	0xdf, 0x18, 0x76, 0x4c, 0xfc, 0xb1, 0x53, 0x0d, 0xc7, 0xa4, 0x2f, 0x8c, 0xde, 0x18, 0xda, 0x1b,
	0xdf, 0x49, 0x0b, 0xca, 0xdc, 0x45, 0x2f, 0x73, 0x4a, 0xf6, 0x00, 0xb2, 0x06, 0x98, 0x58, 0x09,
	0xbd, 0xa2, 0x8c, 0xae, 0xa0, 0xca, 0xcc, 0xe4, 0xc8, 0xbe, 0x6f, 0xab, 0xf3, 0x5d, 0x75, 0xfe,
	0xb2, 0x20, 0x2e, 0x85, 0xee, 0x7e, 0x7c, 0x5e, 0x9b, 0x66, 0xb6, 0xcc, 0xd5, 0x7e, 0x76, 0x18,
	0xe4, 0x9c, 0xd1, 0x04, 0xfe, 0xf2, 0xec, 0x36, 0x64, 0x77, 0x03, 0xe8, 0x06, 0x61, 0x70, 0x6f,
	0x5f, 0x16, 0x47, 0x0c, 0x6e, 0x6d, 0x50, 0x81, 0x25, 0x8c, 0x6e, 0x56, 0xd6, 0xe2, 0x37, 0xdc,
	0x7b, 0x8e, 0xeb, 0xac, 0xef, 0x4d, 0x81, 0x5c, 0x92, 0x4e, 0xe0, 0xae, 0xe6, 0x56, 0xf7, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0x79, 0x0c, 0x48, 0x2d, 0xc5, 0x02, 0x00, 0x00,
}
